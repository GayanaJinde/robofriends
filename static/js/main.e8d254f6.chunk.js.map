{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","react_default","a","createElement","style","overflowY","border","height","children","Card","_ref","name","email","id","className","alt","src","concat","fontFamily","color","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInput","event","setState","searchField","target","value","state","_this$state","filteredCards","filter","robot","toLowerCase","includes","toLocaleLowerCase","length","components_SearchBox","components_Scroll","components_CardList","_this2","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.e8d254f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '3px solid turquoise', height: '340px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Card = ({name, email, id }) => {\r\n    \r\n    return(\r\n        <div className='tc dib br3 pa3 ma2 grow bw2 shadow-5 '>\r\n            <img alt='robos' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h2 style={{fontFamily: \"Cambria\", color: \"wheat\"}}>{name}</h2>\r\n                <p style={{color: \"wheat\"}}>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n   \r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return( \r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox =({searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\" tc pa3 mb4 br3 ba b--blue bg-light-green\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components//CardList';\r\nimport SearchBox from '../components//SearchBox.js';\r\nimport '../containers/App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots: [],\r\n            searchField : '',\r\n        }\r\n    }\r\n\r\n    onInput = (event)=>{\r\n        this.setState({searchField : event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchField } = this.state;\r\n        const filteredCards = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLocaleLowerCase());\r\n        })\r\n        return !robots.length ?\r\n        <h1 className='tc'>LOADING!!!</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>ROBOGROUP</h1>\r\n                <SearchBox searchChange={this.onInput}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredCards}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users=> this.setState({robots: users}));\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}